#!/usr/bin/env python3
# =============================================================================
# @file    test-folio-token
# @brief   Check if the token in the DIBS settings.ini file seems valid
# @created 2022-09-16
# @license Please see the file named LICENSE in the project directory
# @website https://github.com/caltechlibrary/dibs
#
# This is a simple utility meant to be used as a scheduled job (e.g., with
# cron) to regularly test if the FOLIO token in the DIBS settings.ini file
# is still valid.  If it's invalid, it will return a non-zero status value,
# and optionally can post a message to a Slack channel if given suitable
# Slack configuration variables on the command line.
# =============================================================================

# Initial imports. More things are imported later below.

import os
from   os.path import exists, dirname, join, abspath
import plac
import sys

# Figure out the root of the DIBS directory by looking for settings.ini.

here = abspath(dirname(sys.argv[0]))
dibs_root = None
if exists(join(here, 'settings.ini')):
    dibs_root = here
else:
    parent = abspath(join(here, os.path.pardir))
    if exists(join(parent, 'settings.ini')):
        dibs_root = parent

# Adjust Python's load path accordingly.

if dibs_root:
    sys.path.append(dibs_root)

# Now we can load the DIBS things we need.

from dibs import print_version          # noqa: E402
from dibs.settings import config        # noqa: E402


# Main entry point.
# .............................................................................

@plac.annotations(
    slack   = ('post to Slack channel:token if token is invalid', 'option', 's'),
    verbose = ('print info about the results'                   , 'flag'  , 'v'),
    version = ('print version info and exit'                    , 'flag'  , 'V'),
)
def main(slack = 'C:T', verbose = False, version = False):
    '''Test if the FOLIO credentials in settings.ini appear valid.

Without any arguments, this will simply return a non-zero status number if the
credentials are invalid.  If given the --slack argument, it must be in the
form "slack-channel:slack-token"; this program will post a message to the
channel if the FOLIO credentials are invalid.

Here is an example of a crontab line for daily testing of the FOLIO credentials
and posting to a (fake) Slack channel named "my-channel":

  0 8 * * * /path/to/dibs/test-folio-token --slack my-channel:xoxb-895-asfd123

Return values
~~~~~~~~~~~~~

This program exists with a return code of 0 if no problems are encountered. If
any problems are encountered, it returns with a status code as follows:

  1 = no network
  2 = could not find the DIBS settings.ini file
  3 = one or more of the FOLIO_* variables are not set in the settings.ini file
  4 = the given FOLIO credentials are invalid
  5 = malformed or invalid value given for the Slack option
  6 = an unknown error occurred

Command-line arguments summary
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'''

    def inform(msg):
        if verbose:
            print(msg, flush = True)

    if version:
        print_version()
        sys.exit(0)

    from commonpy.network_utils import network_available
    if not network_available():
        inform('‼️ No network.')
        sys.exit(1)

    if not dibs_root:
        print(f'‼️  File "settings.ini" not found in {here} or {parent}.\n'
              f'‼️  Unexpected directory organization -- unable to proceed.')
        sys.exit(2)

    for var in ['FOLIO_OKAPI_URL', 'FOLIO_OKAPI_TENANT_ID', 'FOLIO_OKAPI_TOKEN']:
        if not folio_config(var):
            inform(f'‼️ Variable "{var}" has no value in settings.ini.')
            sys.exit(3)

    if credentials_valid():
        inform('The DIBS credentials are valid.')
        sys.exit(0)

    if slack != 'C:T':
        if ':' not in slack:
            inform('‼️ Slack argument is not in the format channel:token')
            sys.exit(5)
        else:
            post_slack('‼️ The DIBS credentials for FOLIO are invalid.', slack)

    inform('‼️ The DIBS credentials are invalid.')
    sys.exit(4)


# Helper functions.
# .............................................................................

def folio_config(var):
    '''Return the value of variable "var" in the settings.ini file.'''
    return config(var, section = 'folio', default = None)


def credentials_valid():
    '''Test if the url, tenant id, and token allow FOLIO API calls.'''
    import requests

    folio_url    = folio_config('FOLIO_OKAPI_URL')
    folio_tenant = folio_config('FOLIO_OKAPI_TENANT_ID')
    folio_token  = folio_config('FOLIO_OKAPI_TOKEN')

    headers = {'Accept'         : 'application/json',
               'X-Okapi-Tenant' : f'{folio_tenant}',
               'x-Okapi-token'  : f'{folio_token}'}

    try:
        resp = requests.get(f'{folio_url}/instance-statuses', headers = headers)
        if resp:
            resp.raise_for_status()
            return resp.status_code < 400
        else:
            return False
    except requests.exceptions.HTTPError:
        sys.exit(6)


def post_slack(text, params):
    '''Post message "text" to the Slack channel described by "params".'''
    import requests

    slack_channel, slack_token = params.split(':')
    requests.post('https://slack.com/api/chat.postMessage', {
        'token': slack_token,
        'channel': slack_channel,
        'text': text,
        'username': 'DIBS token tester',
    })


# Main invocation.
# .............................................................................

plac.call(main)
